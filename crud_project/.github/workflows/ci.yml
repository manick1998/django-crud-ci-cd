name: CI/CD Pipeline # The name of the GitHub Actions workflow

on:
  push:
    branches:
      - main # Run the pipeline when code is pushed to the main branch
      - develop # Run the pipeline for the develop branch
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint-test-build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    services:
      postgres: # Set up a PostgreSQL database service for testing
        image: postgres
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3 # Clone the repository code into the GitHub runner

      - name: Set Up Python
        uses: actions/setup-python@v3 # Install Python on the GitHub runner
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt  # Install project dependencies
          pip install flake8 pytest pytest-django coverage  # Install testing and linting tools

      - name: Run Linter (Flake8)
        run: |
          flake8 . --count --show-source --statistics  # Check code quality

      - name: Run Django Tests
        run: |
          coverage run -m pytest  # Run Django tests with coverage tracking
          coverage report -m  # Show the test coverage report

      - name: Build Docker Image
        run: |
          docker build -t my-django-app .  # Build a Docker image using the Dockerfile

      - name: Push Docker Image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag my-django-app mydockerhubuser/my-django-app:latest  # Tag the Docker image
          docker push mydockerhubuser/my-django-app:latest  # Push the Docker image to Docker Hub
